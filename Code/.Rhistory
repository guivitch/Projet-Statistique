#read geojson
install.packages("geojsonsf")
library(geojsonsf)
library(ggplot2)
quarter_paris <- geojson_sf("D:\\DeSIgeo/Projet Statistique/Data/quartier_paris.geojson")
geo <- quarter_paris
ggplot(geo) + geom_sf(aes(fill = SA2_NAME)) + guides(fill = guide_none())
ggplot(geo)
ggplot(geo) + geom_sf(aes(fill = SA2_NAME))
ggplot(geo) + geom_sf(aes(fill = c_arr))
ggplot(geo) + geom_sf(aes(fill = geo$c_arr))
## Paris
#read geopackage/geojson
rbnb = st_read("D:\\DeSIgeo/Projet Statistique/Data/listings.csv")
library(dplyr)
library(readr)
library(sf)
library(ggplot2)
geo_bnb <-  st_read("D:\\DeSIgeo/Projet Statistique/Data/listings.csv")
pts<- st_as_sf(data.frame(x,y), coords = c("x", "y"),crs=st_crs(geo))
pts<- st_as_sf(data.frame(x,y), coords = c("longitude", "latitude"),crs=st_crs(geo))
pts<- st_as_sf(geo_bnb, coords = c("longitude", "latitude"),crs=st_crs(geo))
inter <- st_intersects(sff, pts) # Points par région
inter <- st_intersects(geo, pts) # Points par région
niveau1 <- sapply(X = inter, FUN = length) # Comptage
niveau1
ggplot(pts)
View(inter)
ggplot(pts)+geom_sf(aes(fill = pts$neighbourhood))
ggplot(pts)+geom_sf(aes(fill = pts$neighbourhood, colorRampPalette(blues9)))
ggplot(pts)+geom_sf(aes(fill = pts$neighbourhood, color='RampPalette(blues9)'))
ggplot(pts)+geom_sf(aes(fill = pts$neighbourhood, color='(blues9)'))
ggplot(pts)+geom_sf(aes(fill = neighbourhood, color='blues9'))
ggplot(pts,geo)+geom_sf(aes(fill = neighbourhood, color='blues9'))
ggplot(geo)+geom_sf(aes(fill = neighbourhood, color='blues9'))
geo <- quarter_paris
quarter_paris <- geojson_sf("D:\\DeSIgeo/Projet Statistique/Data/quartier_paris.geojson")
ggplot(geo) + geom_sf(aes(fill = geo$c_arr))
ggplot()+geom_sf(aes(fill = neighbourhood, color='blues9'))
ggplot(geo) + geom_sf(aes(fill = geo$c_arr))
geo$density <- niveau1
geo$density
geom_histogram(geo$density)
ggplot()+geom_sf(aes(fill = neighbourhood, color='blues9')) + geom_histogram(aes(fill =geo$density))
ggplot() + geom_sf(aes(fill =geo$density))
ggplot(data = geo$density, aes(geometry = geo$geometry)) + geom_sf()
ggplot(data = geo, aes(geometry = geo$geometry)) + geom_sf()
ggplot(data = geo, aes(geometry = geometry)) + geom_sf()
ggplot(data = geo, aes(geometry = geometry)) + geom_sf(aes(fill = geo$density))
ggplot(data = geo, aes(geometry = geometry)) + geom_sf(aes(fill = geo$density, col ='red'))
ggplot(data = geo, aes(geometry = geometry)) + geom_sf(aes(fill = geo$density, col ='white'))
geo$density_surface <- geo$density/geo$n_sq_qu
geo$density_surface <- geo$density/as.numeric(geo$n_sq_qu)
ggplot(data = geo, aes(geometry = geometry)) + geom_sf(aes(fill = geo$density_surface, col ='white'))
ggplot(data = geo, aes(geometry = geometry)) + geom_sf(aes(fill = geo$density, col ='white'))
arr <- geojson_sf("D:\\DeSIgeo/Projet Statistique/Data/neighbourhoods.geojson")
inter2 <- st_intersects(arr, pts) # Points par arrondissement
arr<- st_as_sf(arr, crs=st_crs(geo))
inter2 <- st_intersects(arr, pts) # Points par arrondissement
ggplot(data = geo, aes(geometry = geometry)) + geom_sf(aes(fill = geo$density)) +
geom_sf_text(
data = geo,
aes(label = l_qu),
check_overlap = TRUE,
size = 3,
color = "white"
)
ggplot(data = geo, aes(geometry = geometry)) + geom_sf(aes(fill = density)) +
geom_sf_text(
data = geo,
aes(label = l_qu),
check_overlap = FALSE,
size = 3,
color = "white"
)
ggplot(data = geo, aes(geometry = geometry)) + geom_sf(aes(fill = density)) +
geom_sf_text(
data = geo,
aes(label = l_qu),
check_overlap = TRUE,
size = 4,
color = "white"
)
plot(x=geo$l_qu,y=geo$density)
plot(x=geo$l_qu[1:10,],y=geo$density)
plot(x=geo$l_qu[1:10],y=geo$density)
plot(x=geo$l_qu[1:10],y=geo$density[1:10])
geo$l_qu
plot(x=as.numeric(geo$l_qu[1:10]),y=geo$density[1:10])
geo$density
geo$density_surface <- geo$density/as.numeric(geo$surface)
ggplot(data = geo, aes(geometry = geometry)) + geom_sf(aes(fill = density_surface)) +
geom_sf_text(
data = geo,
aes(label = l_qu),
check_overlap = TRUE,
size = 4,
color = "white"
)
arr <- geojson_sf("D:\\DeSIgeo/Projet Statistique/Data/arrondissements.geojson")
arr<- st_as_sf(arr, crs=st_crs(geo))
inter2 <- st_intersects(arr, pts) # Points par arrondissement
niveau2 <- sapply(X = inter2, FUN = length) # Comptage des points
arr$density <- niveau2
ggplot(data = arr, aes(geometry = geometry)) + geom_sf(aes(fill = density)) +
geom_sf_text(
data = arr,
aes(label = l_aroff),
check_overlap = TRUE,
size = 4,
color = "white"
)
ggplot(data = geo, aes(geometry = geometry)) + geom_sf(aes(fill = density_surface)) +
geom_sf_text(
data = geo,
aes(label = l_qu),
check_overlap = TRUE,
size = 4,
color = "white"
)
arr$density_sufacique <- (arr$density/as.numeric(arr$surface)/1e6)
arr$density_sufacique <- (arr$density/as.numeric(arr$surface))
ggplot(data = arr, aes(geometry = geometry)) + geom_sf(aes(fill = density)) +
geom_sf_text(
data = arr,
aes(label = l_aroff),
check_overlap = TRUE,
size = 4,
color = "white"
)
ggplot(data = pts,aes(geometry = geometry)) + geom_sf(aes(fill=neighbourhood))
length(pts)
length(nrow(pts))
nrow(pts)
ggplot(data = arr, aes(geometry = geometry)) + geom_sf(aes(fill = density)) +
geom_sf_text(
data = arr,
aes(label = l_aroff),
check_overlap = TRUE,
size = 4,
color = "white"
)
arr_list <- distinct(arr$neighbourhood)
arr_list <- distinct(as.numeric(arr$neighbourhood)
